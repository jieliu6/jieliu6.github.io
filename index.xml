<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Liu Lab</title>
    <link>https://jieliu6.github.io/</link>
      <atom:link href="https://jieliu6.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Liu Lab</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2017-2023 Jie Liu</copyright><lastBuildDate>Tue, 01 Oct 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Liu Lab</title>
      <link>https://jieliu6.github.io/</link>
    </image>
    
    <item>
      <title>Example Page 1</title>
      <link>https://jieliu6.github.io/software/schictools/usage/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://jieliu6.github.io/software/schictools/usage/</guid>
      <description>&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Supported Formats&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pre-processed Matrices:
If the data is already processed into matrices for intra-chromosomal contacts,
the chromosome from the same cell must be stored in the same folder with
chromosome names as file names (e.g., scHiC/cell_1/chr1.txt).
You only need to provide the folder name for a cell (e.g., scHiC/cell_1).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npy: numpy.array / numpy.matrix&lt;/li&gt;
&lt;li&gt;npz: scipy.sparse.coo_matrix&lt;/li&gt;
&lt;li&gt;matrix: matrix stored as pure text&lt;/li&gt;
&lt;li&gt;matrix_txt: matrix stored as .txt file&lt;/li&gt;
&lt;li&gt;HiCRep: the format required by HiCRep package&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edge List &lt;br /&gt;
For all formats below:&lt;br /&gt;
  str - strand (forward / reverse)&lt;br /&gt;
  chr - chromosome&lt;br /&gt;
  pos - position&lt;br /&gt;
  score - contact reads&lt;br /&gt;
  frag - fragments (will be ignored)&lt;br /&gt;
  mapq - map quality&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shortest&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Shortest_Score&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;score&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Short&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;str1&amp;gt; &amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;str2&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;frag2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Short_Score&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;str1&amp;gt; &amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;str2&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;frag2&amp;gt; &amp;lt;score&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Medium&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;readname&amp;gt; &amp;lt;str1&amp;gt; &amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;str2&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;frag2&amp;gt; &amp;lt;mapq1&amp;gt; &amp;lt;mapq2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Long&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;str1&amp;gt; &amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;str2&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;frag2&amp;gt; &amp;lt;mapq1&amp;gt; &amp;lt;cigar1&amp;gt; &amp;lt;sequence1&amp;gt; &amp;lt;mapq2&amp;gt; &amp;lt;cigar2&amp;gt; &amp;lt;sequence2&amp;gt; &amp;lt;readname1&amp;gt; &amp;lt;readname2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;4DN&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;## pairs format v1.0
#columns: readID chr1 position1 chr2 position2 strand1 strand2
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.hic format: we adapted &amp;ldquo;straw&amp;rdquo; from JuiceTools.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.mcool format: we adapted &amp;ldquo;dump&amp;rdquo; from cool.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other formats: simply give the indices (start from 1) in the order of&lt;br /&gt;
&amp;ldquo;chromosome1 - position1 - chromosome2 - position2 - score&amp;rdquo; or&lt;br /&gt;
&amp;ldquo;chromosome1 - position1 - chromosome2 - position2&amp;rdquo; or&lt;br /&gt;
&amp;ldquo;chromosome1 - position1 - chromosome2 - position2 - mapq1 - mapq2&amp;rdquo;.&lt;br /&gt;
For example, you can provide &amp;ldquo;2356&amp;rdquo; or [2, 3, 5, 6] if the file takes this format:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;name&amp;gt; &amp;lt;chromosome1&amp;gt; &amp;lt;position1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;chromosome2&amp;gt; &amp;lt;position2&amp;gt; &amp;lt;frag2&amp;gt; &amp;lt;strand1&amp;gt; &amp;lt;strand2&amp;gt;
contact_1 chr1 3000000 1 chr1 3001000 1 + -
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Import Package&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;import scHiCTools
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Load scHiC data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The scHiC data is stored in a series of files, with each of the files corresponding to one cell.
You need to specify the list of scHiC file paths.&lt;/p&gt;
&lt;p&gt;Only intra-chromosomal interactions are counted.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;from scHiCTools import scHiCs
&amp;gt;&amp;gt;&amp;gt;files = [&#39;./cell_1&#39;, &#39;./cell_2&#39;, &#39;./cell_3&#39;]
&amp;gt;&amp;gt;&amp;gt;loaded_data = scHiCs(
... files, reference_genome=&#39;mm9&#39;,
... resolution=500000, keep_n_strata=10,
... format=&#39;customized&#39;, adjust_resolution=True,
... customized_format=12345, header=0, chromosomes=&#39;except Y&#39;,
... operations=[&#39;OE_norm&#39;, &#39;convolution&#39;]
... )
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;reference genome (dict or str): now supporting &amp;lsquo;mm9&amp;rsquo;, &amp;lsquo;mm10&amp;rsquo;, &amp;lsquo;hg19&amp;rsquo;, &amp;lsquo;hg38&amp;rsquo;.
If your reference genome is not in [&amp;lsquo;mm9&amp;rsquo;, &amp;lsquo;mm10&amp;rsquo;, &amp;lsquo;hg19&amp;rsquo;, &amp;lsquo;hg38&amp;rsquo;], you need to provide the lengths of chromosomes
you are going to use with a Python dict. e.g. {&amp;lsquo;chr1&amp;rsquo;: 150000000, &amp;lsquo;chr2&amp;rsquo;: 130000000, &amp;lsquo;chr3&amp;rsquo;: 200000000}&lt;/li&gt;
&lt;li&gt;resolution (int): the resolution to separate genome into bins.
If using .hic file format, the given resolution must match with the resolutions in .hic file.&lt;/li&gt;
&lt;li&gt;keep_n_strata (None or int): only store contacts within n strata near the diagonal. Default: 10.
If &amp;lsquo;None&amp;rsquo;, it will not store strata&lt;/li&gt;
&lt;li&gt;store_full_map (bool): whether store full contact maps in numpy matrices or
scipy sparse matrices，If False, it will save memory.&lt;/li&gt;
&lt;li&gt;sparse (bool): whether to use sparse matrices&lt;/li&gt;
&lt;li&gt;format (str): file format, supported formats: &amp;lsquo;shortest&amp;rsquo;, &amp;lsquo;shortest_score&amp;rsquo;, &amp;lsquo;short&amp;rsquo;,
&amp;lsquo;short_score&amp;rsquo; , &amp;lsquo;medium&amp;rsquo;, &amp;lsquo;long&amp;rsquo;, &amp;lsquo;4DN&amp;rsquo;, &amp;lsquo;.hic&amp;rsquo;, &amp;lsquo;.mcool&amp;rsquo;, &amp;lsquo;npy&amp;rsquo;, &amp;lsquo;npz&amp;rsquo;, &amp;lsquo;matrix&amp;rsquo;,
&amp;lsquo;HiCRep&amp;rsquo;, &amp;lsquo;matrix_txt&amp;rsquo; and &amp;lsquo;customized&amp;rsquo;. Default: &amp;lsquo;customized&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;customized_format (int or str or list): the column indices in the order of
&amp;ldquo;chromosome 1 - position 1 - chromosome 2 - position 2 - contact reads&amp;rdquo; or
&amp;ldquo;chromosome 1 - position 1 - chromosome 2 - position 2&amp;rdquo; or
&amp;ldquo;chromosome 1 - position 1 - chromosome 2 - position 2 - map quality 1 - map quality 2&amp;rdquo;.
e.g. if the line is &amp;ldquo;chr1 5000000 chr2 3500000 2&amp;rdquo;, the format should be &amp;lsquo;12345&amp;rsquo; or [1, 2, 3, 4, 5]; if there is no column
indicating number of reads, you can just provide 4 numbers like &amp;lsquo;1234&amp;rsquo;, and contact read will be set as 1.
Default: &amp;lsquo;12345&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;adjust_resolution: whether to adjust resolution for the input file.
Sometimes the input file is already in the proper resolution (e.g. position 3000000 has already been changed to 6 with 500kb resolution).
For this situation you can set adjust_resolution=False. Default: True.&lt;/li&gt;
&lt;li&gt;map_filter (float): keep all contacts with mapq higher than this threshold. Default: 0.0&lt;/li&gt;
&lt;li&gt;header (int): how many header lines does the file have. Default: 0.&lt;/li&gt;
&lt;li&gt;chromosomes (list or str): chromosomes to use, eg. [&amp;lsquo;chr1&amp;rsquo;, &amp;lsquo;chr2&amp;rsquo;], or
just &amp;lsquo;except Y&amp;rsquo;, &amp;lsquo;except XY&amp;rsquo;, &amp;lsquo;all&amp;rsquo;.
Default: &amp;lsquo;all&amp;rsquo;, which means chr 1-19 + XY for mouse and chr 1-22 + XY for human.&lt;/li&gt;
&lt;li&gt;operations (list or None): the operations use for pre-processing or smoothing the maps given in a list.
The operations will happen in the given order.
Supported operations: &amp;lsquo;logarithm&amp;rsquo;, &amp;lsquo;power&amp;rsquo;, &amp;lsquo;convolution&amp;rsquo;, &amp;lsquo;random_walk&amp;rsquo;,
&amp;lsquo;network_enhancing&amp;rsquo;, &amp;lsquo;OE_norm&amp;rsquo;, &amp;lsquo;VC_norm&amp;rsquo;, &amp;lsquo;VC_SQRT_norm&amp;rsquo;, &amp;lsquo;KR_norm&amp;rsquo;。
Default: None.&lt;/li&gt;
&lt;li&gt;For preprocessing and smoothing operations, sometimes you need additional arguments
(introduced in next sub-section).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also skip pre-processing and smoothing in loading step (operations=None),
and do them in next lines.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Plot number of contacts and select cells&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can plot the number of contacts of your cells.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;loaded_data.plot_contacts(hist=True, percent=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If hist is &lt;code&gt;True&lt;/code&gt;, plot Histogram of the number of contacts. If percent is &lt;code&gt;True&lt;/code&gt;, plot the scatter plot of cells with  of short-range contacts (&amp;lt; 2 Mb) versus contacts at the mitotic band (2-12 Mb).&lt;/p&gt;
&lt;p&gt;You can select cells based on number of contacts:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;loaded_data.select_cells(min_n_contacts=10000,max_short_range_contact=0.99)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above command select cells have number of contacts bigger than 10000 and percent of short range contacts small than .99.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pre-processing and Smoothing Operations&lt;/strong&gt;
Stand alone pre-processing and smoothing:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;loaded_data.processing([&#39;random_walk&#39;, &#39;network_enhancing&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you didn&amp;rsquo;t store full map (i.e. store_full_map=False), processing is not
doable in a separate step.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;logarithm:
new_W_ij = log_(base) (W_ij + epsilon). Additional arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;log_base: default: e&lt;/li&gt;
&lt;li&gt;epsilon: default: 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;power: new_W_ij = (W_ij)^pow. Additional argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pow: default: 0.5 (i.e., sqrt(W_ij))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VC_norm: VC normalization - each value divided by the sum of
corresponding row then divided by the sum of corresponding column&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VC_SQRT_norm: VC_SQRT normalization - each value divided by the sqrt of the sum
of corresponding row then divided by the sqrt of the sum of corresponding column&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;KR_norm: KR normalization - iterating until the sum of each row / column is one
Argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;maximum_error_rate (float): iteration ends when max error is smaller
than (maximum_error_rate). Default: 1e-4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OE_norm: OE normalization -  each value divided by the average of its
corresponding strata (diagonal line)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;convolution: smoothing with a N by N convolution kernel, with each value equal to 1/N^2.
Argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kernel_shape: an integer. e.g. kernel_shape=3 means a 3*3 matrix with each value = 1/9. Default: 3.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Random walk: multiply by a transition matrix (also calculated from contact map itself).
Argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;random_walk_ratio: a value between 0 and 1, e.g. if ratio=0.9, the result will be
0.9 * matrix_after_random_walk + 0.1 * original_matrix. Default: 1.0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Network enhancing: transition matrix only comes from k-nearest neighbors of each line.
Arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kNN: value &amp;lsquo;k&amp;rsquo; in kNN. Default: 20.&lt;/li&gt;
&lt;li&gt;iterations: number of iterations for network enhancing. Default: 1&lt;/li&gt;
&lt;li&gt;alpha: similar with random_walk_ratio. Default: 0.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Learn Embeddings&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;embs = loaded_data.learn_embedding(
... dim=2, similarity_method=&#39;inner_product&#39;, embedding_method=&#39;MDS&#39;,
... n_strata=None, aggregation=&#39;median&#39;, return_distance=False
... )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function will return the embeddings in the format of a numpy array with shape ( # of cells, # of dimensions).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dim (int): the dimension for the embedding&lt;/li&gt;
&lt;li&gt;similarity_method (str): reproducibility measure, &amp;lsquo;InnerProduct&amp;rsquo;, &amp;lsquo;HiCRep&amp;rsquo; or
&amp;lsquo;Selfish&amp;rsquo;. Default: &amp;lsquo;InnerProduct&amp;rsquo;&lt;/li&gt;
&lt;li&gt;embedding_method (str): &amp;lsquo;MDS&amp;rsquo;, &amp;lsquo;tSNE&amp;rsquo; or &amp;lsquo;UMAP&amp;rsquo;&lt;/li&gt;
&lt;li&gt;n_strata (int): only consider contacts within this genomic distance. Default: None.
If it is None, it will use the all strata kept (the argument keep_n_strata from
previous loading process). Thus n_strata and keep_n_strata (loading step) cannot be
None at the same time.&lt;/li&gt;
&lt;li&gt;aggregation (str): method to aggregate different chromosomes,
&amp;lsquo;mean&amp;rsquo; or &amp;lsquo;median&amp;rsquo;. Default: &amp;lsquo;median&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;return_distance (bool): if True, return (embeddings, distance_matrix); if False, only return embeddings. Default: False.&lt;/li&gt;
&lt;li&gt;Some additional argument for Selfish:
&lt;ul&gt;
&lt;li&gt;n_windows (int): split contact map into n windows, default: 10&lt;/li&gt;
&lt;li&gt;sigma (float): sigma in the Gaussian-like kernel: default: 1.6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Clustering&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are two functions to cluster cells.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;label=loaded_data.clustering(
... n_clusters=4, clustering_method=&#39;kmeans&#39;, similarity_method=&#39;innerproduct&#39;,
... aggregation=&#39;median&#39;, n_strata=None
... )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;clustering&lt;/code&gt; function returns a numpy array of cell labels clustered.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;n_clusters (int): Number of clusters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clustering_method (str):
Clustering method in &amp;lsquo;kmeans&amp;rsquo;, &amp;lsquo;spectral_clustering&amp;rsquo; or &amp;lsquo;HAC&amp;rsquo;(hierarchical agglomerative clustering).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;similarity_method (str):
Reproducibility measure.
Value in ‘InnerProduct’, ‘HiCRep’ or ‘Selfish’.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;aggregation (str):
Method to aggregate different chromosomes.
Value is either &amp;lsquo;mean&amp;rsquo; or &amp;lsquo;median&amp;rsquo;.
Default: &amp;lsquo;median&amp;rsquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;n_strata (int or None):
Only consider contacts within this genomic distance.
If it is None, it will use the all strata kept (the argument keep_n_strata) from previous loading process. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;print_time (bool):
Whether to print the processing time. Default: False.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;hicluster=loaded_data.scHiCluster(dim=2,cutoff=0.8,n_PCs=10,k=4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;scHiCluster&lt;/code&gt; function returns two componments.
First componment is a numpy array of embedding of cells using HiCluster.
Second componment is a numpy of cell labels clustered by HiCluster.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;dim (int): Number of dimension of embedding. Default: 2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cutoff (float): The cutoff proportion to convert the real contact matrix into binary matrix. Default: 0.8.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;n_PCs (int): Number of principal components. Default: 10.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;k (int): Number of clusters. Default: 4.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Visualization&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;scatter(data, dimension=&amp;quot;2D&amp;quot;, point_size=3, sty=&#39;default&#39;,
... label=None, title=None, alpha=None, aes_label=None
... )
&amp;gt;&amp;gt;&amp;gt;plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function is to plot scatter plot of embedding points of single cell data.
Scatter plot of either two-dimensions or three-dimensions will be generated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;data (numpy.array): A numpy array which has 2 or 3 columns, every row represent a point.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dimension (str): Specifiy the dimension of the plot, either &amp;ldquo;2D&amp;rdquo; or &amp;ldquo;3D&amp;rdquo;. Default: &amp;ldquo;2D&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;point_size (float): Set the size of the points in scatter plot. Default: 3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sty (str): Styles of Matplotlib. Default: &amp;lsquo;default&amp;rsquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;label (list or None): specifiy the label of each point. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;title (str): Title of the plot. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;alpha (float): The alpha blending value. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;aes_label (list): Set the label of every axis. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ldquo;scHiCTools&amp;rdquo; also support interactive scatter plot which require the module &amp;lsquo;plotly&amp;rsquo;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;interactive_scatter(loaded_data, data, out_file, dimension=&#39;2D&#39;, point_size=3,
... label=None, title=None, alpha=1, aes_label=None)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function is to generate an interactive scatter plot of embedded single cell data.
The plot will be stored in a file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;schic (scHiCs): A &lt;code&gt;scHiCs&lt;/code&gt; object.&lt;/li&gt;
&lt;li&gt;data (numpy.array): A numpy array which has 2 or 3 columns, every row represent a point.&lt;/li&gt;
&lt;li&gt;out_file (str): Output file path.&lt;/li&gt;
&lt;li&gt;dimension (str): Specifiy the dimension of the plot, either &amp;ldquo;2D&amp;rdquo; or &amp;ldquo;3D&amp;rdquo;. The default is &amp;ldquo;2D&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;point_size (float): Set the size of the points in scatter plot. The default is 3.&lt;/li&gt;
&lt;li&gt;label (list or None): Specifiy the label of each point. The default is None.&lt;/li&gt;
&lt;li&gt;title (str): Title of the plot. The default is None.&lt;/li&gt;
&lt;li&gt;alpha (float): The alpha blending value. The default is 1.&lt;/li&gt;
&lt;li&gt;aes_label (list): Set the label of every axis. The default is None.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://jieliu6.github.io/software/schictools/installation1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://jieliu6.github.io/software/schictools/installation1/</guid>
      <description>&lt;h2 id=&#34;required-python-packages&#34;&gt;Required Python Packages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Python (version &amp;gt;= 3.6)&lt;/li&gt;
&lt;li&gt;numpy (version &amp;gt;= 1.15.4)&lt;/li&gt;
&lt;li&gt;scipy (version &amp;gt;= 1.0)&lt;/li&gt;
&lt;li&gt;matplotlib (version &amp;gt;=3.1.1)&lt;/li&gt;
&lt;li&gt;pandas (version &amp;gt;=0.19)&lt;/li&gt;
&lt;li&gt;simplejson&lt;/li&gt;
&lt;li&gt;six&lt;/li&gt;
&lt;li&gt;h5py&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;interactive_scatter&lt;/code&gt; feature requirement&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;plotly (version &amp;gt;= &amp;gt;=4.8.0)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://jieliu6.github.io/software/schictools/installation2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://jieliu6.github.io/software/schictools/installation2/</guid>
      <description>&lt;h2 id=&#34;install-from-github&#34;&gt;Install from GitHub&lt;/h2&gt;
&lt;p&gt;You can install the package with following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;  $ git clone https://github.com/liu-bioinfo-lab/scHiCTools.git
  $ cd scHiCTools
  $ python setup.py install
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-from-pypi&#34;&gt;Install from PyPI&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;  $ pip install scHiCTools
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-optional-interactive-dependencie&#34;&gt;Install optional interactive dependencie&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;  $ pip install scHiCTools[interactive_scatter]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;  $ pip install -e .[interactive_scatter]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Supported Format</title>
      <link>https://jieliu6.github.io/software/schictools/usage1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://jieliu6.github.io/software/schictools/usage1/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pre-processed Matrices:
If the data is already processed into matrices for intra-chromosomal contacts,
the chromosome from the same cell must be stored in the same folder with
chromosome names as file names (e.g., scHiC/cell_1/chr1.txt).
You only need to provide the folder name for a cell (e.g., scHiC/cell_1).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npy: numpy.array / numpy.matrix&lt;/li&gt;
&lt;li&gt;npz: scipy.sparse.coo_matrix&lt;/li&gt;
&lt;li&gt;matrix: matrix stored as pure text&lt;/li&gt;
&lt;li&gt;matrix_txt: matrix stored as .txt file&lt;/li&gt;
&lt;li&gt;HiCRep: the format required by HiCRep package&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edge List &lt;br /&gt;
For all formats below:&lt;br /&gt;
  str - strand (forward / reverse)&lt;br /&gt;
  chr - chromosome&lt;br /&gt;
  pos - position&lt;br /&gt;
  score - contact reads&lt;br /&gt;
  frag - fragments (will be ignored)&lt;br /&gt;
  mapq - map quality&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shortest&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Shortest_Score&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;score&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Short&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;str1&amp;gt; &amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;str2&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;frag2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Short_Score&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;str1&amp;gt; &amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;str2&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;frag2&amp;gt; &amp;lt;score&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Medium&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;readname&amp;gt; &amp;lt;str1&amp;gt; &amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;str2&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;frag2&amp;gt; &amp;lt;mapq1&amp;gt; &amp;lt;mapq2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Long&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;str1&amp;gt; &amp;lt;chr1&amp;gt; &amp;lt;pos1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;str2&amp;gt; &amp;lt;chr2&amp;gt; &amp;lt;pos2&amp;gt; &amp;lt;frag2&amp;gt; &amp;lt;mapq1&amp;gt; &amp;lt;cigar1&amp;gt; &amp;lt;sequence1&amp;gt; &amp;lt;mapq2&amp;gt; &amp;lt;cigar2&amp;gt; &amp;lt;sequence2&amp;gt; &amp;lt;readname1&amp;gt; &amp;lt;readname2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;4DN&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;## pairs format v1.0
#columns: readID chr1 position1 chr2 position2 strand1 strand2
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.hic format: we adapted &amp;ldquo;straw&amp;rdquo; from JuiceTools.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.mcool format: we adapted &amp;ldquo;dump&amp;rdquo; from cool.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other formats: simply give the indices (start from 1) in the order of&lt;br /&gt;
&amp;ldquo;chromosome1 - position1 - chromosome2 - position2 - score&amp;rdquo; or&lt;br /&gt;
&amp;ldquo;chromosome1 - position1 - chromosome2 - position2&amp;rdquo; or&lt;br /&gt;
&amp;ldquo;chromosome1 - position1 - chromosome2 - position2 - mapq1 - mapq2&amp;rdquo;.&lt;br /&gt;
For example, you can provide &amp;ldquo;2356&amp;rdquo; or [2, 3, 5, 6] if the file takes this format:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;name&amp;gt; &amp;lt;chromosome1&amp;gt; &amp;lt;position1&amp;gt; &amp;lt;frag1&amp;gt; &amp;lt;chromosome2&amp;gt; &amp;lt;position2&amp;gt; &amp;lt;frag2&amp;gt; &amp;lt;strand1&amp;gt; &amp;lt;strand2&amp;gt;
contact_1 chr1 3000000 1 chr1 3001000 1 + -
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Load Data</title>
      <link>https://jieliu6.github.io/software/schictools/usage2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://jieliu6.github.io/software/schictools/usage2/</guid>
      <description>&lt;h2 id=&#34;import-package&#34;&gt;Import Package&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;import scHiCTools
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;load-schic-data&#34;&gt;Load scHiC data&lt;/h2&gt;
&lt;p&gt;The scHiC data is stored in a series of files, with each of the files corresponding to one cell.
You need to specify the list of scHiC file paths.&lt;/p&gt;
&lt;p&gt;Only intra-chromosomal interactions are counted.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;from scHiCTools import scHiCs
&amp;gt;&amp;gt;&amp;gt;files = [&#39;./cell_1&#39;, &#39;./cell_2&#39;, &#39;./cell_3&#39;]
&amp;gt;&amp;gt;&amp;gt;loaded_data = scHiCs(
... files, reference_genome=&#39;mm9&#39;,
... resolution=500000, keep_n_strata=10,
... format=&#39;customized&#39;, adjust_resolution=True,
... customized_format=12345, header=0, chromosomes=&#39;except Y&#39;,
... operations=[&#39;OE_norm&#39;, &#39;convolution&#39;]
... )
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;reference genome (dict or str): now supporting &amp;lsquo;mm9&amp;rsquo;, &amp;lsquo;mm10&amp;rsquo;, &amp;lsquo;hg19&amp;rsquo;, &amp;lsquo;hg38&amp;rsquo;.
If your reference genome is not in [&amp;lsquo;mm9&amp;rsquo;, &amp;lsquo;mm10&amp;rsquo;, &amp;lsquo;hg19&amp;rsquo;, &amp;lsquo;hg38&amp;rsquo;], you need to provide the lengths of chromosomes
you are going to use with a Python dict. e.g. {&amp;lsquo;chr1&amp;rsquo;: 150000000, &amp;lsquo;chr2&amp;rsquo;: 130000000, &amp;lsquo;chr3&amp;rsquo;: 200000000}&lt;/li&gt;
&lt;li&gt;resolution (int): the resolution to separate genome into bins.
If using .hic file format, the given resolution must match with the resolutions in .hic file.&lt;/li&gt;
&lt;li&gt;keep_n_strata (None or int): only store contacts within n strata near the diagonal. Default: 10.
If &amp;lsquo;None&amp;rsquo;, it will not store strata&lt;/li&gt;
&lt;li&gt;store_full_map (bool): whether store full contact maps in numpy matrices or
scipy sparse matrices，If False, it will save memory.&lt;/li&gt;
&lt;li&gt;sparse (bool): whether to use sparse matrices&lt;/li&gt;
&lt;li&gt;format (str): file format, supported formats: &amp;lsquo;shortest&amp;rsquo;, &amp;lsquo;shortest_score&amp;rsquo;, &amp;lsquo;short&amp;rsquo;,
&amp;lsquo;short_score&amp;rsquo; , &amp;lsquo;medium&amp;rsquo;, &amp;lsquo;long&amp;rsquo;, &amp;lsquo;4DN&amp;rsquo;, &amp;lsquo;.hic&amp;rsquo;, &amp;lsquo;.mcool&amp;rsquo;, &amp;lsquo;npy&amp;rsquo;, &amp;lsquo;npz&amp;rsquo;, &amp;lsquo;matrix&amp;rsquo;,
&amp;lsquo;HiCRep&amp;rsquo;, &amp;lsquo;matrix_txt&amp;rsquo; and &amp;lsquo;customized&amp;rsquo;. Default: &amp;lsquo;customized&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;customized_format (int or str or list): the column indices in the order of
&amp;ldquo;chromosome 1 - position 1 - chromosome 2 - position 2 - contact reads&amp;rdquo; or
&amp;ldquo;chromosome 1 - position 1 - chromosome 2 - position 2&amp;rdquo; or
&amp;ldquo;chromosome 1 - position 1 - chromosome 2 - position 2 - map quality 1 - map quality 2&amp;rdquo;.
e.g. if the line is &amp;ldquo;chr1 5000000 chr2 3500000 2&amp;rdquo;, the format should be &amp;lsquo;12345&amp;rsquo; or [1, 2, 3, 4, 5]; if there is no column
indicating number of reads, you can just provide 4 numbers like &amp;lsquo;1234&amp;rsquo;, and contact read will be set as 1.
Default: &amp;lsquo;12345&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;adjust_resolution: whether to adjust resolution for the input file.
Sometimes the input file is already in the proper resolution (e.g. position 3000000 has already been changed to 6 with 500kb resolution).
For this situation you can set adjust_resolution=False. Default: True.&lt;/li&gt;
&lt;li&gt;map_filter (float): keep all contacts with mapq higher than this threshold. Default: 0.0&lt;/li&gt;
&lt;li&gt;header (int): how many header lines does the file have. Default: 0.&lt;/li&gt;
&lt;li&gt;chromosomes (list or str): chromosomes to use, eg. [&amp;lsquo;chr1&amp;rsquo;, &amp;lsquo;chr2&amp;rsquo;], or
just &amp;lsquo;except Y&amp;rsquo;, &amp;lsquo;except XY&amp;rsquo;, &amp;lsquo;all&amp;rsquo;.
Default: &amp;lsquo;all&amp;rsquo;, which means chr 1-19 + XY for mouse and chr 1-22 + XY for human.&lt;/li&gt;
&lt;li&gt;operations (list or None): the operations use for pre-processing or smoothing the maps given in a list.
The operations will happen in the given order.
Supported operations: &amp;lsquo;logarithm&amp;rsquo;, &amp;lsquo;power&amp;rsquo;, &amp;lsquo;convolution&amp;rsquo;, &amp;lsquo;random_walk&amp;rsquo;,
&amp;lsquo;network_enhancing&amp;rsquo;, &amp;lsquo;OE_norm&amp;rsquo;, &amp;lsquo;VC_norm&amp;rsquo;, &amp;lsquo;VC_SQRT_norm&amp;rsquo;, &amp;lsquo;KR_norm&amp;rsquo;。
Default: None.&lt;/li&gt;
&lt;li&gt;For preprocessing and smoothing operations, sometimes you need additional arguments
(introduced in next sub-section).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also skip pre-processing and smoothing in loading step (operations=None),
and do them in next lines.&lt;/p&gt;
&lt;h2 id=&#34;plot-number-of-contacts-and-select-cells&#34;&gt;Plot number of contacts and select cells&lt;/h2&gt;
&lt;p&gt;You can plot the number of contacts of your cells.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;loaded_data.plot_contacts(hist=True, percent=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If hist is &lt;code&gt;True&lt;/code&gt;, plot Histogram of the number of contacts. If percent is &lt;code&gt;True&lt;/code&gt;, plot the scatter plot of cells with  of short-range contacts (&amp;lt; 2 Mb) versus contacts at the mitotic band (2-12 Mb).&lt;/p&gt;
&lt;p&gt;You can select cells based on number of contacts:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;loaded_data.select_cells(min_n_contacts=10000,max_short_range_contact=0.99)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above command select cells have number of contacts bigger than 10000 and percent of short range contacts small than .99.&lt;/p&gt;
&lt;h2 id=&#34;pre-processing-and-smoothing-operations&#34;&gt;Pre-processing and Smoothing Operations&lt;/h2&gt;
&lt;p&gt;Stand alone pre-processing and smoothing:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;loaded_data.processing([&#39;random_walk&#39;, &#39;network_enhancing&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you didn&amp;rsquo;t store full map (i.e. store_full_map=False), processing is not
doable in a separate step.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;logarithm:
new_W_ij = log_(base) (W_ij + epsilon). Additional arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;log_base: default: e&lt;/li&gt;
&lt;li&gt;epsilon: default: 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;power: new_W_ij = (W_ij)^pow. Additional argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pow: default: 0.5 (i.e., sqrt(W_ij))&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VC_norm: VC normalization - each value divided by the sum of
corresponding row then divided by the sum of corresponding column&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VC_SQRT_norm: VC_SQRT normalization - each value divided by the sqrt of the sum
of corresponding row then divided by the sqrt of the sum of corresponding column&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;KR_norm: KR normalization - iterating until the sum of each row / column is one
Argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;maximum_error_rate (float): iteration ends when max error is smaller
than (maximum_error_rate). Default: 1e-4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OE_norm: OE normalization -  each value divided by the average of its
corresponding strata (diagonal line)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;convolution: smoothing with a N by N convolution kernel, with each value equal to 1/N^2.
Argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kernel_shape: an integer. e.g. kernel_shape=3 means a 3*3 matrix with each value = 1/9. Default: 3.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Random walk: multiply by a transition matrix (also calculated from contact map itself).
Argument:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;random_walk_ratio: a value between 0 and 1, e.g. if ratio=0.9, the result will be
0.9 * matrix_after_random_walk + 0.1 * original_matrix. Default: 1.0.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Network enhancing: transition matrix only comes from k-nearest neighbors of each line.
Arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;kNN: value &amp;lsquo;k&amp;rsquo; in kNN. Default: 20.&lt;/li&gt;
&lt;li&gt;iterations: number of iterations for network enhancing. Default: 1&lt;/li&gt;
&lt;li&gt;alpha: similar with random_walk_ratio. Default: 0.9&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Learn Embedding</title>
      <link>https://jieliu6.github.io/software/schictools/usage3/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://jieliu6.github.io/software/schictools/usage3/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;  &amp;gt;&amp;gt;&amp;gt;embs = loaded_data.learn_embedding(
  ... dim=2, similarity_method=&#39;inner_product&#39;, embedding_method=&#39;MDS&#39;,
  ... n_strata=None, aggregation=&#39;median&#39;, return_distance=False
  ... )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function will return the embeddings in the format of a numpy array with shape ( # of cells, # of dimensions).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dim (int): the dimension for the embedding&lt;/li&gt;
&lt;li&gt;similarity_method (str): reproducibility measure, &amp;lsquo;InnerProduct&amp;rsquo;, &amp;lsquo;HiCRep&amp;rsquo; or
&amp;lsquo;Selfish&amp;rsquo;. Default: &amp;lsquo;InnerProduct&amp;rsquo;&lt;/li&gt;
&lt;li&gt;embedding_method (str): &amp;lsquo;MDS&amp;rsquo;, &amp;lsquo;tSNE&amp;rsquo; or &amp;lsquo;UMAP&amp;rsquo;&lt;/li&gt;
&lt;li&gt;n_strata (int): only consider contacts within this genomic distance. Default: None.
If it is None, it will use the all strata kept (the argument keep_n_strata from
previous loading process). Thus n_strata and keep_n_strata (loading step) cannot be
None at the same time.&lt;/li&gt;
&lt;li&gt;aggregation (str): method to aggregate different chromosomes,
&amp;lsquo;mean&amp;rsquo; or &amp;lsquo;median&amp;rsquo;. Default: &amp;lsquo;median&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;return_distance (bool): if True, return (embeddings, distance_matrix); if False, only return embeddings. Default: False.&lt;/li&gt;
&lt;li&gt;Some additional argument for Selfish:
&lt;ul&gt;
&lt;li&gt;n_windows (int): split contact map into n windows, default: 10&lt;/li&gt;
&lt;li&gt;sigma (float): sigma in the Gaussian-like kernel: default: 1.6&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Clustering</title>
      <link>https://jieliu6.github.io/software/schictools/usage4/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://jieliu6.github.io/software/schictools/usage4/</guid>
      <description>&lt;p&gt;There are two functions to cluster cells.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;label=loaded_data.clustering(
... n_clusters=4, clustering_method=&#39;kmeans&#39;, similarity_method=&#39;innerproduct&#39;,
... aggregation=&#39;median&#39;, n_strata=None
... )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;clustering&lt;/code&gt; function returns a numpy array of cell labels clustered.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;n_clusters (int): Number of clusters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;clustering_method (str):
Clustering method in &amp;lsquo;kmeans&amp;rsquo;, &amp;lsquo;spectral_clustering&amp;rsquo; or &amp;lsquo;HAC&amp;rsquo;(hierarchical agglomerative clustering).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;similarity_method (str):
Reproducibility measure.
Value in ‘InnerProduct’, ‘HiCRep’ or ‘Selfish’.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;aggregation (str):
Method to aggregate different chromosomes.
Value is either &amp;lsquo;mean&amp;rsquo; or &amp;lsquo;median&amp;rsquo;.
Default: &amp;lsquo;median&amp;rsquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;n_strata (int or None):
Only consider contacts within this genomic distance.
If it is None, it will use the all strata kept (the argument keep_n_strata) from previous loading process. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;print_time (bool):
Whether to print the processing time. Default: False.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;hicluster=loaded_data.scHiCluster(dim=2,cutoff=0.8,n_PCs=10,k=4)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;scHiCluster&lt;/code&gt; function returns two componments.
First componment is a numpy array of embedding of cells using HiCluster.
Second componment is a numpy of cell labels clustered by HiCluster.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;dim (int): Number of dimension of embedding. Default: 2.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cutoff (float): The cutoff proportion to convert the real contact matrix into binary matrix. Default: 0.8.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;n_PCs (int): Number of principal components. Default: 10.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;k (int): Number of clusters. Default: 4.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Visualization</title>
      <link>https://jieliu6.github.io/software/schictools/usage5/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://jieliu6.github.io/software/schictools/usage5/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;scatter(data, dimension=&amp;quot;2D&amp;quot;, point_size=3, sty=&#39;default&#39;,
... label=None, title=None, alpha=None, aes_label=None
... )
&amp;gt;&amp;gt;&amp;gt;plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function is to plot scatter plot of embedding points of single cell data.
Scatter plot of either two-dimensions or three-dimensions will be generated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;data (numpy.array): A numpy array which has 2 or 3 columns, every row represent a point.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;dimension (str): Specifiy the dimension of the plot, either &amp;ldquo;2D&amp;rdquo; or &amp;ldquo;3D&amp;rdquo;. Default: &amp;ldquo;2D&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;point_size (float): Set the size of the points in scatter plot. Default: 3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sty (str): Styles of Matplotlib. Default: &amp;lsquo;default&amp;rsquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;label (list or None): specifiy the label of each point. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;title (str): Title of the plot. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;alpha (float): The alpha blending value. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;aes_label (list): Set the label of every axis. Default: None.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;ldquo;scHiCTools&amp;rdquo; also support interactive scatter plot which require the module &amp;lsquo;plotly&amp;rsquo;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;&amp;gt;&amp;gt;&amp;gt;interactive_scatter(loaded_data, data, out_file, dimension=&#39;2D&#39;, point_size=3,
... label=None, title=None, alpha=1, aes_label=None)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function is to generate an interactive scatter plot of embedded single cell data.
The plot will be stored in a file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;schic (scHiCs): A &lt;code&gt;scHiCs&lt;/code&gt; object.&lt;/li&gt;
&lt;li&gt;data (numpy.array): A numpy array which has 2 or 3 columns, every row represent a point.&lt;/li&gt;
&lt;li&gt;out_file (str): Output file path.&lt;/li&gt;
&lt;li&gt;dimension (str): Specifiy the dimension of the plot, either &amp;ldquo;2D&amp;rdquo; or &amp;ldquo;3D&amp;rdquo;. The default is &amp;ldquo;2D&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;point_size (float): Set the size of the points in scatter plot. The default is 3.&lt;/li&gt;
&lt;li&gt;label (list or None): Specifiy the label of each point. The default is None.&lt;/li&gt;
&lt;li&gt;title (str): Title of the plot. The default is None.&lt;/li&gt;
&lt;li&gt;alpha (float): The alpha blending value. The default is 1.&lt;/li&gt;
&lt;li&gt;aes_label (list): Set the label of every axis. The default is None.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Liquid biopsy for proliferative diabetic retinopathy: single-cell transcriptomics of human vitreous reveals inflammatory T cell signature</title>
      <link>https://jieliu6.github.io/publication/journal-paper/liquid-biopsy-proliferative-diabetic-retinopathy/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/liquid-biopsy-proliferative-diabetic-retinopathy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CNTools: A computational toolbox for cellular neighborhood analysis from multiplexed images</title>
      <link>https://jieliu6.github.io/publication/journal-paper/cn-tools/</link>
      <pubDate>Wed, 28 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/cn-tools/</guid>
      <description></description>
    </item>
    
    <item>
      <title>3D reconstruction of the mouse cochlea from scRNA-seq data suggests morphogen-based principles in apex-to-base specification</title>
      <link>https://jieliu6.github.io/publication/journal-paper/3d-reconstruction-mouse-cochlea-scrna-seq/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/3d-reconstruction-mouse-cochlea-scrna-seq/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mapping the developmental potential of mouse inner ear organoids at single-cell resolution</title>
      <link>https://jieliu6.github.io/publication/journal-paper/mapping-developmental-potential-mouse-inner-ear-organoids-single-cell-resolution/</link>
      <pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/mapping-developmental-potential-mouse-inner-ear-organoids-single-cell-resolution/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Genetic risk converges on regulatory networks mediating early type 2 diabetes</title>
      <link>https://jieliu6.github.io/publication/journal-paper/genetic-risk-type-2-diabetes/</link>
      <pubDate>Sun, 03 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/genetic-risk-type-2-diabetes/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A generalizable framework to comprehensively predict epigenome, chromatin organization, and transcriptome</title>
      <link>https://jieliu6.github.io/publication/journal-paper/epcot/</link>
      <pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/epcot/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Genomic Knowledge Graph</title>
      <link>https://jieliu6.github.io/project/genomic-knowledge-graph/</link>
      <pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/project/genomic-knowledge-graph/</guid>
      <description>&lt;p&gt;Genomic Knowledgebase (GenomicKB) is a graph database for researchers to explore and investigate human genome, epigenome, transcriptome, and 4D nucleome with simple and efficient queries. The database uses a knowledge graph to consolidate genomic datasets and annotations from over 30 consortia and portals, including 347 million genomic entities, 1.36 billion relations, and 3.9 billion entity and relation properties. GenomicKB is equipped with a web-based query system (&lt;a href=&#34;https://gkb.dcmb.med.umich.edu/&#34;&gt;https://gkb.dcmb.med.umich.edu/&lt;/a&gt;) which allows users to query the knowledge graph with customized graph patterns and specific constraints on entities and relations. Compared with traditional tabular-structured data stored in separate data portals, GenomicKB emphasizes the relations among genomic entities, intuitively connects isolated data matrices, and supports efficient queries for scientific discoveries. GenomicKB transforms complicated analysis among multiple genomic entities and relations into coding-free queries, and facilitates data-driven genomic discoveries in the future.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GenomicKB: a knowledge graph for the human genome</title>
      <link>https://jieliu6.github.io/publication/journal-paper/gkb/</link>
      <pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/gkb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>NucleoMap</title>
      <link>https://jieliu6.github.io/project/nucleo-map/</link>
      <pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/project/nucleo-map/</guid>
      <description>&lt;p&gt;Although poorly positioned nucleosomes are ubiquitous in the eukaryotic genome, they are difficult to identify with existing nucleosome identification methods. Recently available enhanced high-throughput chromatin conformation capture techniques such as Micro-C, DNase Hi-C, and Hi-CO characterize nucleosome-level chromatin proximity, probing the positions of mono-nucleosomes and the spacing between nucleosome pairs at the same time, enabling nucleosome profiling in poorly positioned regions. Here we develop a novel computational approach, NucleoMap, to identify nucleosome positioning from ultra-high resolution chromatin contact maps. By integrating nucleosome read density, contact distances, and binding preferences, NucleoMap precisely locates nucleosomes in both prokaryotic and eukaryotic genomes and outperforms existing nucleosome identification methods in both precision and recall. We rigorously characterize genome-wide association in eukaryotes between the spatial organization of mono-nucleosomes and their corresponding histone modifications, protein binding activities, and higher-order chromatin functions. We also find evidence of two tetra-nucleosome folding structures in human embryonic stem cells and analyze their association with multiple structural and functional regions. Based on the identified nucleosomes, nucleosome contact maps are constructed, reflecting the inter-nucleosome distances and preserving the contact distance profiles in original contact maps.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NucleoMap: a computational tool for identifying nucleosomes in ultra-high resolution contact maps</title>
      <link>https://jieliu6.github.io/publication/journal-paper/nucleomap/</link>
      <pubDate>Thu, 14 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/nucleomap/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Characterizing collaborative transcription regulation with a graph-based deep learning approach</title>
      <link>https://jieliu6.github.io/publication/journal-paper/echo/</link>
      <pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/echo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ECHO</title>
      <link>https://jieliu6.github.io/project/echo/</link>
      <pubDate>Mon, 06 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/project/echo/</guid>
      <description>&lt;p&gt;Human epigenome and transcription activities have been characterized by a number of sequence-based deep learning approaches which only utilize the DNA sequences. However, transcription factors interact with each other, and their collaborative regulatory activities go beyond the linear DNA sequence. Therefore leveraging the informative 3D chromatin organization to investigate the collaborations among transcription factors is critical. We developed ECHO, a graph-based neural network, to predict chromatin features and characterize the collaboration among them by incorporating 3D chromatin organization from 200-bp high-resolution Micro-C contact maps. ECHO predicted 2,583 chromatin features with significantly higher average AUROC and AUPR than the best sequence-based model. We observed that chromatin contacts of different distances affected different types of chromatin features&amp;rsquo; prediction in diverse ways, suggesting complex and divergent collaborative regulatory mechanisms. Moreover, ECHO was interpretable via gradient-based attribution methods. The attributions on chromatin contacts identify important contacts relevant to chromatin features. The attributions on DNA sequences identify TF binding motifs and TF collaborative binding. Furthermore, combining the attributions on contacts and sequences reveals important sequence patterns in the neighborhood which are relevant to a target sequence&amp;rsquo;s chromatin feature prediction.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Connecting high-resolution 3D chromatin organization with epigenomics</title>
      <link>https://jieliu6.github.io/publication/journal-paper/connecting-high-resolution-3d-chromatin-organiazation-with-chromatin/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/connecting-high-resolution-3d-chromatin-organiazation-with-chromatin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>p53 inactivation unmasks histone methylation-independent and cytoplasmic-dependent WDR5 functions that drive self-renewal and differentiation of pluripotent stem cells</title>
      <link>https://jieliu6.github.io/www.sciencedirect.com/science/article/pii/s2213671121005154</link>
      <pubDate>Tue, 09 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/www.sciencedirect.com/science/article/pii/s2213671121005154</guid>
      <description></description>
    </item>
    
    <item>
      <title>3′HS1 CTCF binding site in human β-globin locus regulates fetal hemoglobin expression</title>
      <link>https://jieliu6.github.io/elifesciences.org/articles/70557</link>
      <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/elifesciences.org/articles/70557</guid>
      <description></description>
    </item>
    
    <item>
      <title>EPCOT</title>
      <link>https://jieliu6.github.io/project/epcot/</link>
      <pubDate>Tue, 14 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/project/epcot/</guid>
      <description>&lt;p&gt;Many deep learning approaches have been proposed to predict epigenetic profiles, chromatin organization, and transcription activity. While these approaches achieve satisfactory performance in predicting one modality from another, the learned representations are not generalizable across predictive tasks or across cell types. In this paper, we propose a deep learning approach named EPCOT which employs a pre-training and fine-tuning framework, and comprehensively predicts epigenome, chromatin organization, transcriptome, and enhancer activity in one framework. EPCOT is the first framework proposed to predict all of these genomic modalities and performs well in individual modality prediction, which is also generalizable to new cell and tissue types. EPCOT also maps from DNA sequence and chromatin accessibility profiles to generic representations which are generalizable across different modalities. Interpreting EPCOT model also provides biological insights including mapping between different genomic modalities, identifying TF sequence binding patterns, and analyzing cell-type specific TF impacts on enhancer activity.&lt;/p&gt;
&lt;p&gt;Web portal: &lt;a href=&#34;https://liu-bioinfo-lab.github.io/EPCOT_APP.github.io/&#34;&gt;https://liu-bioinfo-lab.github.io/EPCOT_APP.github.io/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>scHiCTools: a computational toolbox for analyzing single-cell Hi-C data</title>
      <link>https://jieliu6.github.io/publication/journal-paper/schictools/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/schictools/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CAESAR</title>
      <link>https://jieliu6.github.io/project/caesar/</link>
      <pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/project/caesar/</guid>
      <description>&lt;p&gt;The resolution of chromatin conformation capture technologies keeps increasing, and the recent nucleosome resolution chromatin contact maps allow us to explore how fine-scale 3D chromatin organization is related to epigenomic states in human cells. Using publicly available Micro-C datasets, we develop a deep learning model, CAESAR, to learn a mapping function from epigenomic features to 3D chromatin organization. The model accurately predicts fine-scale structures, such as short-range chromatin loops and stripes, that Hi-C fails to detect. With existing epigenomic datasets from ENCODE and Roadmap Epigenomics Project, we successfully impute high-resolution 3D chromatin contact maps for 91 human tissues and cell lines. In the imputed high-resolution contact maps, we identify the spatial interactions between genes and their experimentally validated regulatory elements, demonstrating CAESAR’s potential in coupling transcriptional regulation with 3D chromatin organization at high resolution.&lt;/p&gt;
&lt;p&gt;Web Portal: &lt;a href=&#34;https://nucleome.dcmb.med.umich.edu/caesar/&#34;&gt;https://nucleome.dcmb.med.umich.edu/caesar/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Code: &lt;a href=&#34;https://github.com/liu-bioinfo-lab/caesar&#34;&gt;https://github.com/liu-bioinfo-lab/caesar&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mapping the regulatory landscape of auditory hair cells from single-cell multi-omics data</title>
      <link>https://jieliu6.github.io/publication/journal-paper/mapping-regulatory-landscape-auditory-hair-cells/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/mapping-regulatory-landscape-auditory-hair-cells/</guid>
      <description></description>
    </item>
    
    <item>
      <title>News</title>
      <link>https://jieliu6.github.io/news/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 -0500</pubDate>
      <guid>https://jieliu6.github.io/news/</guid>
      <description>








&lt;p&gt;&lt;strong&gt;10/2024&lt;/strong&gt; Dr. Liu presented &amp;ldquo;Building knowledge graphs towards transparent biomedical AI&amp;rdquo; at NIH/NIDDK AI in Precision Medicine Workshop &lt;a href=&#39;https://www.niddk.nih.gov/news/meetings-workshops/2024/artificial-intelligence-in-precision-medicine-of-diabetes-2024?agenda&#39;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;08/2024&lt;/strong&gt; Dr. Liu received Endowment for the Basic Sciences Teaching Award 2024. &lt;a href=https://medschool.umich.edu/department-news/jie-liu-phd-and-weichen-arthur-zhou-phd-were-recognized-university-michigan-endowment-basic-sciences&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;08/2024&lt;/strong&gt; Yicheng Tao&amp;rsquo;s CNTools work was published on &lt;a href=&#39;https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1012344&#39;&gt;PLoS CB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;04/2024&lt;/strong&gt; Shuze&amp;rsquo;s work was published on Developmental Cell. &lt;a href=https://medschool.umich.edu/department-news/former-dcmb-phd-student-dr-shuze-wang-published-developmental-cell&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;03/2024&lt;/strong&gt; The Liu Lab is a part of the new NIDDK project PanKbase. &lt;a href=https://www.michiganmedicine.org/research-news/teams-create-one-stop-resource-human-pancreatic-data-foster-diabetes-research&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12/2023&lt;/strong&gt; Our collaborative work got published on Nature. &lt;a href=https://www.michiganmedicine.org/health-lab/study-links-gene-network-and-pancreatic-beta-cell-defects-type-2-diabetes&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12/2023&lt;/strong&gt; Congratulations to Fan who successfully defended his PhD thesis and will join Vanderbilt University Medical Center as a research fellow! &lt;a href=https://medicine.vumc.org/department-directory/Fan-Feng&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;05/2023&lt;/strong&gt; Our paper titled &amp;ldquo;A generalizable framework to comprehensively predict epigenome, chromatin organization, and transcriptome&amp;rdquo; was accepted for publication on Nucleic Acids Research. Congratulations to Zhenhao and the rest of the team!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;04/2023&lt;/strong&gt; Congratulations to Shuze who successfully defended her PhD thesis and will join Massachusetts General Hospital as a staff scientist!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11/2022&lt;/strong&gt; Our paper titled &amp;ldquo;GenomicKB: a knowledge graph for the human genome&amp;rdquo; was accepted for publication on Nucleic Acids Research. Congratulations to Fan and the rest of the team!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;06/2022&lt;/strong&gt; Our paper titled &amp;ldquo;NucleoMap: a computational tool for identifying nucleosomes in ultra-high resolution contact maps&amp;rdquo; was accepted for publication on PLOS Computational Biology. Congratulations to Yuanhao and Bingjiang!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;05/2022&lt;/strong&gt; Our paper titled &amp;ldquo;Characterizing collaborative transcription regulation with a graph-based deep learning approach&amp;rdquo; was accepted for publication on PLOS Computational Biology. Congratulations to Zhenhao and Fan!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;04/2022&lt;/strong&gt; Our paper titled &amp;ldquo;Connecting high-resolution 3D chromatin organization with epigenomics&amp;rdquo; is published on Nature Communications. Congratulations to Fan, Yuan, David and Xiaotian!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10/2021&lt;/strong&gt; Our collaborative work with Dr. Xiaotian Zhang &amp;ldquo;3&amp;rsquo;HS1 CTCF binding site in human β-globin locus regulates fetal hemoglobin expression&amp;rdquo; is published on eLife.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;09/2021&lt;/strong&gt; Together with Dr. Welch, I will teach a new course BIOINF593/EECS598-011 Machine Learning in Computational Biology.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;08/2021&lt;/strong&gt;  Together with Lana, Josh and Smita, we organized a workshop on machine-learning methods for single-cell analysis (&lt;a href=&#34;https://sites.google.com/view/new-trends-in-single-cell-geno/home&#34;&gt;https://sites.google.com/view/new-trends-in-single-cell-geno/home&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;07/2021&lt;/strong&gt; Three graduate students Linghua Jiang, Zheyu Zhang, and Yicheng Tao joined the lab.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;04/2021&lt;/strong&gt; scHiCTools paper was accepted for publication in PLOS Computational Biology. Congratulations to Xinjun, Fan, Hongxi and Wai Yan.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;04/2021&lt;/strong&gt; Shuze Wang&amp;rsquo;s work was published on &lt;a href=https://genome.cshlp.org/content/early/2021/04/09/gr.271080.120.abstract&gt;Genome Research&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;03/2021&lt;/strong&gt; Sean Moran decided to join the lab after his rotation. Welcome, Sean!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10/2020&lt;/strong&gt; Zhenhao Zhang joined the lab and entered BIOINFO PhD program after finishing his master of IOE. Welcome, Zhenhao!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;09/2020&lt;/strong&gt;  Liu Lab received the NHGRI Innovator Award (R35) to develop deep learning approaches to understand the relationship between chromatin state features and chromatin organization.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;09/2020&lt;/strong&gt;  Liu Lab received NIH Pilot Projects Enhancing Utility and Usage of Common Fund Data Sets Award (R03) to build a database for high-resolution chromatin contact maps and human genetic variants.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;08/2020&lt;/strong&gt;  Congratulations to Yuanhao who passed his prelim exam.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;04/2020&lt;/strong&gt;  Congratulations to past trainees, Yufeng Zhang, Mingyu Du, Yujuan Fu, Zheyu Zhang and Yijiao Qin, who were admitted to competitive graduate programs in U-M, UC-Irvine, UW, Georgia Tech, CMU.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;12/2019&lt;/strong&gt;  Congratulations to Fan and Shuze who passed their prelim exams.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11/2019&lt;/strong&gt;  Jie formally joined 4DN Consortium as an associate member.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;09/2019&lt;/strong&gt;  Master student, Yuanhao Huang, joined the lab and transferred to DCMB PhD program.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;05/2019&lt;/strong&gt;  Two DCMB PhD students, Fan Feng and Shuze Wang, joined the lab.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;01/2019&lt;/strong&gt;  Liu Lab officially started in the Department of Computational Medicine and Bioinformatics at the University of Michigan.&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>Capturing cell type-specific chromatin structural patterns by applying topic modeling to single-cell Hi-C data</title>
      <link>https://jieliu6.github.io/publication/journal-paper/capture-cell-type-specific-chromatin/</link>
      <pubDate>Wed, 18 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/capture-cell-type-specific-chromatin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>p53 Integrates Temporal WDR5 Inputs during Neuroectoderm and Mesoderm Differentiation of Mouse Embryonic Stem Cells</title>
      <link>https://jieliu6.github.io/publication/journal-paper/p53-integrates-temporal-wdr5-inputs/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/p53-integrates-temporal-wdr5-inputs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Jointly embedding multiple single-cell omics measurements</title>
      <link>https://jieliu6.github.io/publication/conference-paper/jointly-embedding-multiple-single-cell/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/jointly-embedding-multiple-single-cell/</guid>
      <description></description>
    </item>
    
    <item>
      <title>single-cell multi-omics integration</title>
      <link>https://jieliu6.github.io/project/single-cell-multi-omics-integration/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/project/single-cell-multi-omics-integration/</guid>
      <description>&lt;p&gt;Many single-cell sequencing technologies are now available, but it is still difficult to apply multiple sequencing technologies to the same single cell. In this paper, we propose an unsupervised manifold alignment algorithm, MMD-MA, for integrating multiple measurements carried out on disjoint aliquots of a given population of cells. Effectively, MMD-MA performs an in silico co-assay by embedding cells measured in different ways into a learned latent space. In the MMD-MA algorithm, single-cell data points from multiple domains are aligned by optimizing an objective function with three components: (1) a maximum mean discrepancy (MMD) term to encourage the differently measured points to have similar distributions in the latent space, (2) a distortion term to preserve the structure of the data between the input space and the latent space, and (3) a penalty term to avoid collapse to a trivial solution. Notably, MMD-MA does not require any correspondence information across data modalities, either between the cells or between the features. Furthermore, MMD-MA&amp;rsquo;s weak distributional requirements for the domains to be aligned allow the algorithm to integrate heterogeneous types of single cell measures, such as gene expression, DNA accessibility, chromatin organization, methylation, and imaging data. We demonstrate the utility of MMD-MA in simulation experiments and using a real data set involving single-cell gene expression and methylation data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Systematic proteomics of endogenous human cohesin reveals an interaction with diverse splicing factors and RNA binding proteins required for mitotic progression</title>
      <link>https://jieliu6.github.io/publication/journal-paper/systematic-proteomics-of-endogenous-human-cohesin/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/systematic-proteomics-of-endogenous-human-cohesin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>scHi-C embedding</title>
      <link>https://jieliu6.github.io/project/hic-embedding/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/project/hic-embedding/</guid>
      <description>&lt;p&gt;Single-cell Hi-C (scHi-C) data promises to enable scientists to interrogate the 3D architecture of DNA in the nucleus of the cell, studying how this structure varies stochastically or along developmental or cell cycle axes.  However, Hi-C data analysis requires methods that take into account the unique characteristics of this type of data.  In this work, we explore whether methods that have been developed previously for the analysis of bulk Hi-C data can be applied to scHi-C data.  We apply methods designed for analysis of bulk Hi-C data to scHi-C data in conjunction with unsupervised embedding.  We find that one of these methods, HiCRep, when used in conjunction with multidimensional scaling (MDS), strongly outperforms three other methods, including a technique that has been used previously for scHi-C analysis.  We also provide evidence that the HiCRep/MDS method is robust to extremely low per-cell sequencing depth, that this robustness is improved even further when high-coverage and low-coverage cells are projected together, and that the method can be used to jointly embed cells from multiple published datasets.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stochastic Learning for Sparse Discrete Markov Random Fields with Controlled Gradient Approximation Error</title>
      <link>https://jieliu6.github.io/publication/conference-paper/stochastic-learning-for-sparse-discrete-markov-random-fields/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/stochastic-learning-for-sparse-discrete-markov-random-fields/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Unsupervised embedding of single-cell Hi-C data</title>
      <link>https://jieliu6.github.io/publication/conference-paper/unsupervised_embedding_hi_c/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/unsupervised_embedding_hi_c/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Multiple Testing Under Dependence</title>
      <link>https://jieliu6.github.io/project/multiple-testing/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/project/multiple-testing/</guid>
      <description>&lt;p&gt;Observations from large-scale multiple testing problems often exhibit dependence in the sense that whether the null hypothesis of one test is true or not (termed &lt;em&gt;underlying true state&lt;/em&gt;) depends on the underlying true states of other tests. 
For instance, in genome-wide association studies, researchers collect hundreds of thousands of highly correlated genetic markers (single-nucleotide polymorphisms, or SNPs) with the purpose of identifying the subset of markers associated with a heritable disease or trait. 
In functional magnetic resonance imaging studies of the brain, thousands of spatially correlated voxels are collected while subjects are performing certain tasks, with the purpose of detecting the relevant voxels. 
The most popular family of large-scale multiple testing procedures is the false discovery rate analysis. 
However, all these classical multiple testing procedures ignore the correlation structure among the individual factors, and the question is &lt;em&gt;whether we can reduce the false non-discovery rate by leveraging the dependence, while still controlling the false discovery rate in multiple testing&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Graphical models provide an elegant way of representing dependence. 
With recent advances in graphical models, especially more efficient algorithms for inference and parameter estimation, it is feasible to use these models to leverage the dependence between individual tests in multiple testing problems. 
More specifically, we can use graphical models to explicitly model the underlying true states of the hypotheses as random variables to encode the dependence, and then model the observed test statistics independently given their underlying true states. 
We propose a multiple testing procedure based on a Markov-random-field-coupled mixture model which allows arbitrary dependence structures. 
In our model, the underlying true states of the hypotheses form a Markov random field, and the observed test statistics are assumed to be independent given the underlying true states.&lt;/p&gt;
&lt;img src=&#34;../../img/TED-1.jpg&#34;&gt;
&lt;p&gt;This model requires more sophisticated algorithms for parameter estimation and inference. 
For parameter estimation, we design a novel EM algorithm with MCMC in the E-step and a contrastive divergence style algorithm in the M-step. 
We show that there is a lower bound of the log likelihood which nondecreases over the EM iterations except for some MCMC error introduced in the E-step. 
We use the MCMC algorithm to infer the posterior probability that each hypothesis is null (termed &lt;em&gt;local index of significance&lt;/em&gt; or &lt;em&gt;LIS&lt;/em&gt;). 
Finally, the false discovery rate can be controlled by thresholding the LIS.&lt;/p&gt;
&lt;p&gt;In addition, we design a semiparametric variation of the graphical model which nonparametrically estimates the $f_1$ function &amp;mdash; the density function of the test statistic under the alternative hypothesis. 
This is particularly important in some practical problems where $f_1$ is heterogeneous among multiple hypotheses, and cannot be estimated with a simple parametric distribution. 
The remainder of the graphical model is still estimated parametrically. 
The inference of the posterior probability and the false discovery rate control in this semiparametric variation remain the same as the parametric procedure.
More important, this semiparametric approach exactly generalizes the local FDR procedure (Efron et al., 2001) and connects with the BH procedure (Benjamini and Hochberg, 1995).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Comprehensive statistical inference of the clonal structure of cancer from multiple biopsies</title>
      <link>https://jieliu6.github.io/publication/journal-paper/themis/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/themis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Multiple Testing under Dependence via Graphical Models</title>
      <link>https://jieliu6.github.io/publication/journal-paper/multiple-testing-under-dependence/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/multiple-testing-under-dependence/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Structure-leveraged Methods in Breast Cancer Risk Prediction</title>
      <link>https://jieliu6.github.io/publication/journal-paper/structure-leverage-methods/</link>
      <pubDate>Wed, 16 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/structure-leverage-methods/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Discriminatory power of common genetic variants in personalized breast cancer diagnosis</title>
      <link>https://jieliu6.github.io/publication/conference-paper/discriminatory-power/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/discriminatory-power/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Comparing Mammography Abnormality Features to Genetic Variants in the Prediction of Breast Cancer in Women Recommended for Breast Biopsy</title>
      <link>https://jieliu6.github.io/publication/journal-paper/comparing-mammography/</link>
      <pubDate>Sat, 23 Jan 2016 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/comparing-mammography/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Machine Learning for Treatment Assignment: Improving Individualized Risk Attribution</title>
      <link>https://jieliu6.github.io/publication/conference-paper/machine-learning-for-treatment-assignment/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/machine-learning-for-treatment-assignment/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Developing a Utility Decision Framework to Evaluate Predictive Models in Breast Cancer Risk Estimation</title>
      <link>https://jieliu6.github.io/publication/journal-paper/develop-a-utility/</link>
      <pubDate>Mon, 17 Aug 2015 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/develop-a-utility/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Machine Learning for Treatment Assignment: Improving Individualized Risk Attribution</title>
      <link>https://jieliu6.github.io/publication/conference-paper/leverage-interaction-between-genetic-variants/</link>
      <pubDate>Wed, 25 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/leverage-interaction-between-genetic-variants/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Developing a Clinical Utility Framework to Evaluate Prediction Models in Radiogenomics</title>
      <link>https://jieliu6.github.io/publication/conference-paper/developing-a-clinical-utility/</link>
      <pubDate>Sat, 21 Feb 2015 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/developing-a-clinical-utility/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Comparing the Value of Mammographic Features and Genetic Variants in Breast Cancer Risk Prediction</title>
      <link>https://jieliu6.github.io/publication/conference-paper/comparing-the-value-of-mammographic-feature/</link>
      <pubDate>Fri, 14 Nov 2014 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/comparing-the-value-of-mammographic-feature/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Multiple Testing under Dependence via Semiparametric Graphical Models</title>
      <link>https://jieliu6.github.io/publication/conference-paper/multiple-testing-under-dependence-via-semiparametric-graphic-models/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/multiple-testing-under-dependence-via-semiparametric-graphic-models/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Learning Heterogeneous Hidden Markov Random Fields</title>
      <link>https://jieliu6.github.io/publication/conference-paper/learning-heterogeneous-hidden-markov-random-field/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/learning-heterogeneous-hidden-markov-random-field/</guid>
      <description></description>
    </item>
    
    <item>
      <title>New Genetic Variants Improve Personalized Breast Cancer Diagnosis</title>
      <link>https://jieliu6.github.io/publication/conference-paper/new-genetic-variants-improve/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/new-genetic-variants-improve/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Bayesian Estimation of Latently-grouped Parameters in Undirected Graphical Models</title>
      <link>https://jieliu6.github.io/publication/conference-paper/bayesian-estimation-of-latently-grouped/</link>
      <pubDate>Sun, 01 Dec 2013 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/bayesian-estimation-of-latently-grouped/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Genetic Variants Improve Breast Cancer Risk Prediction on Mammograms</title>
      <link>https://jieliu6.github.io/publication/conference-paper/genetic-variants-improve-breast-cancer/</link>
      <pubDate>Fri, 01 Nov 2013 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/genetic-variants-improve-breast-cancer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Predicting Breast Cancer and Prostate Cancer Susceptibility from Single Nucleotide Polymorphisms</title>
      <link>https://jieliu6.github.io/publication/conference-paper/predicting-breast-cancer-and-prostate-cancer/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/predicting-breast-cancer-and-prostate-cancer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Structure Learning of Undirected Graphical Models with Contrastive Divergence</title>
      <link>https://jieliu6.github.io/publication/conference-paper/structure-learning-of-undirected-graphic-models/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/structure-learning-of-undirected-graphic-models/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Graphical-model Based Multiple Testing under Dependence, with Applications to Genome-wide Association Studies</title>
      <link>https://jieliu6.github.io/publication/conference-paper/graphic-model-based-multiple-testing/</link>
      <pubDate>Wed, 01 Aug 2012 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/graphic-model-based-multiple-testing/</guid>
      <description></description>
    </item>
    
    <item>
      <title>High-Dimensional Structured Feature Screening Using Binary Markov Random Fields</title>
      <link>https://jieliu6.github.io/publication/conference-paper/high-dimensional-structured-feature-screening/</link>
      <pubDate>Sun, 01 Apr 2012 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/high-dimensional-structured-feature-screening/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Collective Ranking Method for Genome-wide Association Studies</title>
      <link>https://jieliu6.github.io/publication/conference-paper/a-collective-ranking-method-for/</link>
      <pubDate>Thu, 01 Mar 2012 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/conference-paper/a-collective-ranking-method-for/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cross-Sectional Stock Return Analysis Using Support Vector Regression</title>
      <link>https://jieliu6.github.io/publication/journal-paper/cross-sectional-stock-return/</link>
      <pubDate>Thu, 01 Jan 2009 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/cross-sectional-stock-return/</guid>
      <description>&lt;p&gt;* indicates equal contribution&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Meta-prediction of Phosphorylation Sites with Weighted Voting and Restricted Grid Search Parameter Selection</title>
      <link>https://jieliu6.github.io/publication/journal-paper/meta-prediction-of-phosphoylation-sites/</link>
      <pubDate>Sat, 01 Mar 2008 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/meta-prediction-of-phosphoylation-sites/</guid>
      <description>&lt;p&gt;* indicates equal contribution&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Meta-prediction of Protein Subcellular Localization with Reduced Voting</title>
      <link>https://jieliu6.github.io/publication/journal-paper/meta-prediction-of-protein-subcellular/</link>
      <pubDate>Wed, 01 Aug 2007 00:00:00 +0000</pubDate>
      <guid>https://jieliu6.github.io/publication/journal-paper/meta-prediction-of-protein-subcellular/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
